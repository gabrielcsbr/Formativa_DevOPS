name: Python CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Instalar dependências
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: ✅ Rodar testes
        run: |
          pytest || echo "Nenhum teste encontrado"

      # ---- Notificação de commits na PR ----
      - name: 🔔 Discord Commits (PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: "avatar-with-link"
          include-extras: true
          message: >
            📣 PR **#${{ github.event.pull_request.number }}** para `${{ github.base_ref }}`
            por **${{ github.actor }}** em **${{ github.repository }}**.

      # ---- Notificação de commits em push (ex.: merge no main) ----
      - name: 🔔 Discord Commits (push)
        if: ${{ github.event_name == 'push' }}
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: "avatar-with-link"
          include-extras: true
          message: >
            📣 Push em `${{ github.ref_name }}` por **${{ github.actor }}**
            no repo **${{ github.repository }}**.

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🚀 Simular deploy
        run: |
          mkdir -p dist
          if [ -f src/calculadora.py ]; then
            cp src/calculadora.py dist/
          elif [ -f calculadora.py ]; then
            cp calculadora.py dist/
          else
            echo "⚠️ Arquivo calculadora.py não encontrado!"
            exit 1
          fi
          echo "✅ Deploy simulado concluído. Arquivo copiado para dist/"

      - name: 📁 Listar conteúdo do diretório dist
        run: ls -l dist/

      # ---- Status OK ----
      - name: 🟢 Notificar sucesso no Discord
        if: ${{ success() }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: >
            🟢 **CI/CD OK** • `${{ github.repository }}`
            • Evento: `${{ github.event_name }}`
            • Ref: `${{ github.ref_name }}`
            • Autor: **${{ github.actor }}**
            • Run: #${{ github.run_number }}
            • Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # ---- Status FAIL ----
      - name: 🔴 Notificar falha no Discord
        if: ${{ failure() }}
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: >
            🔴 **CI/CD FALHOU** • `${{ github.repository }}`
            • Job: `${{ github.job }}`
            • Evento: `${{ github.event_name }}`
            • Ref: `${{ github.ref_name }}`
            • Autor: **${{ github.actor }}**
            • Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            

      - name: ✅ Rodar testes (com cobertura)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install pytest pytest-cov; fi
          pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=term-missing

